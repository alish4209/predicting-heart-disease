import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
from sklearn import preprocessing

# --- Data Preparation ---
data = pd.read_csv("framingham.csv")
data.drop(['education'], inplace=True, axis=1)
data.rename(columns={'male': 'Sex_male'}, inplace=True)
data.dropna(axis=0, inplace=True)

# --- Exploratory Data Analysis (EDA) ---
plt.figure(figsize=(8, 6))
sns.countplot(x='TenYearCHD', data=data)
plt.title('Distribution of 10-Year CHD Risk')
plt.show()

print("Count of patients with 10-year risk of CHD:")
print(data['TenYearCHD'].value_counts())

# --- Data Splitting and Scaling ---
X = np.asarray(data[['age', 'Sex_male', 'cigsPerDay', 'totChol', 'sysBP', 'glucose']])
y = np.asarray(data['TenYearCHD'])

X = preprocessing.StandardScaler().fit(X).transform(X)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=4)

print('Train set:', X_train.shape, y_train.shape)
print('Test set:', X_test.shape, y_test.shape)

# --- Model Training ---
logreg = LogisticRegression()
logreg.fit(X_train, y_train)
y_pred = logreg.predict(X_test)

# --- Model Evaluation ---
print('Accuracy of the model is =', accuracy_score(y_test, y_pred))

cm = confusion_matrix(y_test, y_pred)
conf_matrix = pd.DataFrame(data=cm,
                           columns=['Predicted:0', 'Predicted:1'],
                           index=['Actual:0', 'Actual:1'])

plt.figure(figsize=(8, 5))
sns.heatmap(conf_matrix, annot=True, fmt='d', cmap="YlGnBu")
plt.title("Confusion Matrix")
plt.show()

print('Classification Report:')
print(classification_report(y_test, y_pred))
